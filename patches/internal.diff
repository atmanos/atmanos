diff --git a/src/internal/testenv/testenv.go b/src/internal/testenv/testenv.go
index f7c4ad2..3ba24a3 100644
--- a/src/internal/testenv/testenv.go
+++ b/src/internal/testenv/testenv.go
@@ -34,7 +34,7 @@ func Builder() string {
 // and then run them with os.StartProcess or exec.Command.
 func HasGoBuild() bool {
 	switch runtime.GOOS {
-	case "android", "nacl":
+	case "android", "nacl", "atman":
 		return false
 	case "darwin":
 		if strings.HasPrefix(runtime.GOARCH, "arm") {
@@ -104,7 +104,7 @@ func GoTool() (string, error) {
 // using os.StartProcess or (more commonly) exec.Command.
 func HasExec() bool {
 	switch runtime.GOOS {
-	case "nacl":
+	case "nacl", "atman":
 		return false
 	case "darwin":
 		if strings.HasPrefix(runtime.GOARCH, "arm") {
@@ -167,7 +167,11 @@ func HasLink() bool {
 	// From Android release M (Marshmallow), hard linking files is blocked
 	// and an attempt to call link() on a file will return EACCES.
 	// - https://code.google.com/p/android-developer-preview/issues/detail?id=3150
-	return runtime.GOOS != "plan9" && runtime.GOOS != "android"
+	switch runtime.GOOS {
+	case "android", "plan9", "atman":
+		return false
+	}
+	return true
 }
 
 // MustHaveLink reports whether the current system can use os.Link.
diff --git a/src/internal/testenv/testenv_notwin.go b/src/internal/testenv/testenv_notwin.go
index d8ce6cd..eb41157 100644
--- a/src/internal/testenv/testenv_notwin.go
+++ b/src/internal/testenv/testenv_notwin.go
@@ -12,7 +12,7 @@ import (
 
 func hasSymlink() (ok bool, reason string) {
 	switch runtime.GOOS {
-	case "android", "nacl", "plan9":
+	case "android", "nacl", "plan9", "atman":
 		return false, ""
 	}
 
